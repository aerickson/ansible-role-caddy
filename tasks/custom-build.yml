- name: CUSTOM | Download Caddy archive
  get_url:
    url: https://caddyserver.com/download/{{ platform }}/{{ architecture }}?plugins={{ plugins }}&license={{ caddy_license_type }}&telemetry=off
    dest: /var/tmp
    timeout: 180
  register: caddy_archive
  vars:
    platform: "{{ ansible_facts['system'] | lower }}"
    architecture: "{{ caddy_url_values['architecture'][ansible_facts['architecture']] }}"
    plugins: "{% for option in caddy_install_options %}{{ option }}{% if not loop.last %},{% endif %}{% endfor %}"
  tags:
    - caddy

- name: CUSTOM | Create Caddy archive extraction path
  file:
    path: /var/tmp/caddy
    state: directory
  tags:
    - caddy

- name: CUSTOM | Extract Caddy archive
  unarchive:
    dest: /var/tmp/caddy
    src: "{{ caddy_archive.dest }}"
    remote_src: true
  tags:
    - caddy

- name: CUSTOM | Remove Caddy binary
  file:
    path: /usr/local/bin/caddy
    state: absent
  when: caddy_force_update
  tags:
    - caddy

- name: CUSTOM | Copy Caddy binary into place
  script: copy-caddy-bin.sh
  args:
    creates: /usr/local/bin/caddy
  notify:
    - restart caddy
    - systemd daemon reload
  tags:
    - caddy

- name: CUSTOM | Create Caddy group
  group:
    name: caddy
    system: true
  tags:
    - caddy

- name: CUSTOM | Create Caddy user
  user:
    name: caddy
    system: true
  tags:
    - caddy

- name: CUSTOM | Create Caddy directories
  file:
    path: "{{ item.path | default(item) }}"
    owner: "{{ caddy_user }}"
    group: "{{ caddy_group }}"
    mode: "{{ item.mode | default(omit) }}"
    state: directory
  loop:
    - /etc/caddy
    - "{{ caddy_ssl_path }}"
    - /etc/caddy
    - /etc/caddy/conf.d
    - "{{ caddy_log_path }}"
    - "{{ caddy_config_path }}"
    - "{{ caddy_root }}"
  tags:
    - caddy

- block:
    - name: CUSTOM | Copy SystemD unit file
      template:
        src: caddy.service.j2
        dest: /lib/systemd/system/caddy.service
      register: systemd_unit_file
      notify:
        - systemd daemon reload
        - restart caddy
      tags:
        - caddy

    - name: CUSTOM | SystemD daemon reload
      systemd:
        daemon_reload: true
      when: systemd_unit_file is changed
      tags:
        - caddy
  when: "ansible_facts['service_mgr'] == 'systemd'"

- name: CUSTOM | Copy default index.html
  copy:
    src: index.html
    dest: "{{ caddy_root }}"
    owner: "{{ caddy_user }}"
    group: "{{ caddy_group }}"
  tags:
    - caddy
