- name: CUSTOM | Remove Caddy files in order to update
  file:
    path: "{{ item }}"
    state: absent
  when: caddy_force_update
  loop:
    - /usr/local/bin/caddy
    - /var/tmp/caddy/caddy
  tags:
    - caddy

- name: CUSTOM | See if Caddy binary exists
  stat:
    path: /usr/local/bin/caddy
  register: caddy_bin
  tags:
    - caddy

- name: CUSTOM | Download Caddy archive
  get_url:
    url: https://caddyserver.com/download/{{ platform }}/{{ architecture }}?plugins={{ plugins }}&license={{ caddy_license_type }}&telemetry=off
    dest: /var/tmp
    timeout: 480
  register: caddy_archive
  when: not caddy_bin.stat.exists
  vars:
    platform: "{{ ansible_facts['system'] | lower }}"
    architecture: "{{ caddy_url_values['architecture'][ansible_facts['architecture']] }}"
    plugins: "{% for option in caddy_plugins %}{{ option }}{% if not loop.last %},{% endif %}{% endfor %}"
  tags:
    - caddy

- name: CUSTOM | Create Caddy archive extraction path
  file:
    path: /var/tmp/caddy
    state: directory
  tags:
    - caddy

- name: CUSTOM | Extract Caddy archive
  unarchive:
    dest: /var/tmp/caddy
    src: "{{ caddy_archive.dest | default('') }}"
    creates: /var/tmp/caddy/caddy
    remote_src: true
  when: caddy_archive | default({}) is changed
  tags:
    - caddy

- name: CUSTOM | Copy Caddy binary into place
  script: copy-caddy-bin.sh
  args:
    creates: /usr/local/bin/caddy
  notify:
    - restart caddy
    - systemd daemon reload
  tags:
    - caddy

- name: CUSTOM | Create Caddy group
  group:
    name: caddy
    system: true
  tags:
    - caddy

- name: CUSTOM | Create Caddy user
  user:
    name: caddy
    system: true
  tags:
    - caddy

- name: CUSTOM | Create Caddy directories
  file:
    path: "{{ item.path | default(item) }}"
    owner: "{{ caddy_user }}"
    group: "{{ caddy_group }}"
    mode: "{{ item.mode | default(omit) }}"
    state: directory
  loop:
    - "{{ caddy_config_path }}/conf.d"
    - "{{ caddy_ssl_path }}"
    - "{{ caddy_log_path }}"
    - "{{ caddy_root }}"
  tags:
    - caddy

- name: CUSTOM | Copy service file
  template:
    src: "{{ caddy_service_files[ansible_facts.service_mgr]['src'] }}"
    dest: "{{ caddy_service_files[ansible_facts.service_mgr]['dest'] }}"
  register: service_file_task
  notify:
    - systemd daemon reload
    - restart caddy
  tags:
    - caddy

- name: CUSTOM | SystemD daemon reload
  systemd:
    daemon_reload: true
  when:
    - service_file_task is changed
    - ansible_facts.service_mgr == 'systemd'
  tags:
    - caddy

- name: CUSTOM | Copy default index.html
  copy:
    src: blank.html
    dest: "{{ caddy_root }}/index.html"
    owner: "{{ caddy_user }}"
    group: "{{ caddy_group }}"
  tags:
    - caddy
